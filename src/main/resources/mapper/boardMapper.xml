<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.BoardMapper">

    <!-- 게시글 작성 -->
    <insert id="insertBoard" parameterType="dto.BoardDTO">
        INSERT INTO post_board (userId, title, content, category, postType, createTime, views, shippingFee, includes, imagePath, isNotice)
        VALUES (#{userId}, #{title}, #{content}, #{category}, #{postType}, NOW(), 0, #{shippingFee}, #{includes}, #{imagePath}, #{isNotice})
    </insert>

    <!-- 게시글 목록 조회 (카테고리별, 공지사항 제외) -->
    <select id="getBoardListByCategory" parameterType="map" resultType="dto.BoardDTO">
        SELECT boardId, userId, title, content, category, postType, createTime, views, shippingFee, includes, imagePath
        FROM post_board
        WHERE category = #{category}
        AND isNotice = 0
        ORDER BY createTime DESC
        LIMIT #{startNum}, #{pageSize}
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="getBoardById" parameterType="int" resultType="dto.BoardDTO">
        SELECT boardId, userId, title, content, category, postType, createTime, views, shippingFee, includes, imagePath, isNotice
        FROM post_board
        WHERE boardId = #{boardId}
    </select>

    <!-- 게시글 수정 -->
    <update id="updateBoard" parameterType="dto.BoardDTO">
        UPDATE post_board
        SET 
            title = #{title},
            content = #{content},
            category = #{category},
            postType = #{postType},
            shippingFee = #{shippingFee},
            includes = #{includes},
            imagePath = #{imagePath},
            isNotice = #{isNotice}
        WHERE boardId = #{boardId}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deleteBoard" parameterType="int">
        DELETE FROM post_board
        WHERE boardId = #{boardId}
    </delete>

    <!-- 조회수 증가 -->
    <update id="increaseViews" parameterType="int">
        UPDATE post_board
        SET views = views + 1
        WHERE boardId = #{boardId}
    </update>

    <!-- 모든 게시글 조회 (공지사항 상단 고정 포함) -->
    <select id="getAllBoardsWithNotice" parameterType="map" resultType="dto.BoardDTO">
        SELECT boardId, userId, title, content, category, postType, createTime, views, shippingFee, includes, imagePath, isNotice
        FROM post_board
        ORDER BY isNotice DESC, createTime DESC
        LIMIT #{startNum}, #{pageSize}
    </select>

    <!-- 공지사항 목록 조회 -->
    <select id="getAllNotices" resultType="dto.BoardDTO">
        SELECT boardId, userId, title, content, createTime, views, isNotice
        FROM post_board
        WHERE isNotice = 1
        ORDER BY createTime DESC
    </select>

</mapper>